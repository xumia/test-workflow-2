# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pr: none

parameters:
- name: definitions
  type: object
  default: 
    - id: 3
      branches:
      - main
      - 202012
- name: defaultBranches
  type: object
  default:
  - main
  - master
  - 202111
  - 202106 
  - 202012 
  - 202006
  - 201911

pool:
  vmImage: 'ubuntu-20.04'

steps:
- task: PythonScript@0
  env:
    ACCESS_TOKEN: $(System.AccessToken)
    MY_TOKEN: $(MyToken)
  inputs:
    scriptSource: inline
    script: |
      import datetime, base64, json, time, os, re
      from urllib import request

      authentication = 'Bearer {0}'.format(os.environ.get("ACCESS_TOKEN"))
      print(authentication)
      url = '$(System.CollectionUri)$(System.TeamProjectId)/_apis/build/builds?api-version=6.0'
      print(url)
      print("${{ convertToJson(parameters.defaultBranches) }}")
      defaultBranches = json.loads("${{ convertToJson(parameters.defaultBranches) }}")
      definitions = json.loads("${{ convertToJson(parameters.definitions) }}")
      for definition in definitions:
        definitionId = definition.get('branches', defaultBranches)
        for branch in branches:
          req = request.Request(url, method="POST")
          req.add_header('Content-Type', 'application/json')
          req.add_header('Authorization', authentication)
          body = {}
          definition = {}
          definition['id'] = definitionId
          definition['sourceBranch'] = branch
          body['definition'] = definition
          data = bytes(json.dumps(body), encoding="utf-8")
          print(data)
          r = request.urlopen(req, data=data)
          content = r.read()
          print(content)